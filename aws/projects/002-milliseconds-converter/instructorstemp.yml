AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation template for Milliseconds Convertor Application. This app runs on Application Load Balancer. In 
  addition, it is observed by Auto Scaling Group. 

Resources:
  ALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable for App from ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId
  
  WebServerLaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        ImageId: ami-0947d2ba12ee1ff75
        InstanceType: t2.micro
        KeyName: flask02
        SecurityGroupIds:
          - !GetAtt WebServerSecurityGroup.GroupId
        TagSpecifications:
            - ResourceType: instance
              Tags:
                  - Key: Name
                    Value: !Sub Web Server of ${AWS::StackName}
        UserData:
          Fn::Base64:
            !Sub |
              #! /bin/bash
              yum update -y
              yum install python3 -y
              pip3 install flask
              TOKEN="a02cf8a0f5bcdf921e13624b81507807c6eade97"
              FOLDER="https://$TOKEN@raw.githubusercontent.com/E2057SalihPoyraz/Salih-CW-aws-devops-workshop/master/aws/projects/002-milliseconds-converter/"
              curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
              curl -s --create-dirs -o "/home/ec2-user/templates/result.html" -L "$FOLDER"templates/result.html
              curl -s --create-dirs -o "/home/ec2-user/serdarhocaapp.py" -L "$FOLDER"serdarhocaapp.py
              python3 /home/ec2-user/serdarhocaapp.py
  
  WebServerTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !GetAtt WebServerSecurityGroup.VpcId

  ApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId
      Subnets:
        - subnet-f0933cd1
        - subnet-e59f05eb
        - subnet-dc15e1ed
        - subnet-69a20f36
        - subnet-4755250a
        - subnet-5f08a939

  ALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref WebServerTargetGroup  
          Type: forward
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80 
      Protocol: HTTP 
  
  WebServerASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones: !GetAZs
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate: 
        LaunchTemplateId: !Ref WebServerLaunchTemplate
        Version: !GetAtt WebServerLaunchTemplate.LatestVersionNumber
      MaxSize: 3
      MinSize: 1
      TargetGroupARNs:
        - !Ref WebServerTargetGroup
        
Outputs:
  WebsiteURL:
    Description: Milliseconds Converter Application Load Balancer URL
    Value: !Sub 
      - http://${ALBaddress}
      - ALBaddress: !GetAtt ApplicationLoadBalancer.DNSName 