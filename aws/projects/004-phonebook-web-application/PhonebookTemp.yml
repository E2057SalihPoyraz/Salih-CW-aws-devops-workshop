AWSTemplateFormatVersion: 2010-09-09
Description: |
  The Phonebook Application aims to create a phonebook application in Python and deployed as a web
  application with Flask on AWS Application Load Balancer with Auto Scaling Group of Elastic Compute
  Cloud (EC2) Instances and Relational Database Service (RDS) using AWS CloudFormation Service.

Parameters:
  CPUvalue:
    Type: String
    Default: 60
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  PhonebookRDSInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      DBInstanceIdentifier: phonebookdbc
      DBName: phonebook
      DBSecurityGroups:
        - !Ref RDSsg
      Engine: mysql
      EngineVersion: 8.0.20
      MasterUserPassword: clarusway-1
      MasterUsername: admin
      Port: 3306
      StorageType: gp2

  RDSsg:
    Type: "AWS::RDS::DBSecurityGroup"
    Properties:
      DBSecurityGroupIngress:
        - EC2SecurityGroupId: !GetAtt PhonebookEC2sg.GroupId
      EC2VpcId: !GetAtt PhonebookEC2sg.VpcId
      GroupDescription: Allow MYSQL

  PhonebookASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones: !GetAZs 
      Cooldown: 200
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
          LaunchTemplateId: !Ref PhonebookLT
          Version: !GetAtt PhonebookLT.LatestVersionNumber
      MaxSize: 3
      MinSize: 1
      TargetGroupARNs:
        - !Ref PhonebookTG

  PhonebookLT:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        ImageId: ami-0947d2ba12ee1ff75
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        SecurityGroupIds: 
          - !GetAtt PhonebookEC2sg.GroupId
        TagSpecifications: 
          - ResourceType: instance 
            Tags:
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName}
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash
              yum update -y
              yum install python3 -y
              pip3 install flask
              pip3 install flask-mysql
              pip3 install SQLAlchemy 
              pip3 install Flask-SQLAlchemy
              pip3 install mysql-connector-python
              mkdir /home/ec2-user/website
              cd /home/ec2-user/website
              wget https://raw.githubusercontent.com/E2057SalihPoyraz/Salih-CW-aws-devops-workshop/master/aws/projects/004-phonebook-web-application/new-init-phonebook-db.py
              wget https://raw.githubusercontent.com/E2057SalihPoyraz/Salih-CW-aws-devops-workshop/master/aws/projects/004-phonebook-web-application/new-phonebook-app.py
              mkdir /home/ec2-user/website/templates
              cd /home/ec2-user/website/templates
              wget https://raw.githubusercontent.com/E2057SalihPoyraz/Salih-CW-aws-devops-workshop/master/aws/projects/004-phonebook-web-application/templates/index.html
              wget https://raw.githubusercontent.com/E2057SalihPoyraz/Salih-CW-aws-devops-workshop/master/aws/projects/004-phonebook-web-application/templates/delete.html
              wget https://raw.githubusercontent.com/E2057SalihPoyraz/Salih-CW-aws-devops-workshop/master/aws/projects/004-phonebook-web-application/templates/add-update.html
              echo "${PhonebookRDSInstance.Endpoint.Address}" >> /home/ec2-user/dbserver.endpoint
              cd ..
              python3 ./new-init-phonebook-db.py
              python3 ./new-phonebook-app.py
                 
  PhonebookCPUPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: !Ref PhonebookASG
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: !Ref CPUvalue
  
  PhonebookALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      SecurityGroups:
        - !GetAtt LoadBalancersg.GroupId
      Subnets:
        - subnet-4755250a
        - subnet-5f08a939
        - subnet-69a20f36
        - subnet-dc15e1ed
        - subnet-e59f05eb
        - subnet-f0933cd1
      Type: application
  

  PhonebookListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref PhonebookTG
      LoadBalancerArn: !Ref PhonebookALB
      Port: 80
      Protocol: HTTP
  
  PhonebookTG:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !GetAtt PhonebookEC2sg.VpcId

  LoadBalancersg:
      Type: "AWS::EC2::SecurityGroup"
      Properties:
        GroupDescription: Allow HTTP
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0

  PhonebookEC2sg:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Allow HTTP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt LoadBalancersg.GroupId
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${ALBAddress}
      - ALBAddress: !GetAtt PhonebookALB.DNSName
    Description: Phonebook Application Load Balancer URL
